var documenterSearchIndex = {"docs":
[{"location":"#BcdiStrain.jl-Documentation","page":"BcdiStrain","title":"BcdiStrain.jl Documentation","text":"","category":"section"},{"location":"#About","page":"BcdiStrain","title":"About","text":"","category":"section"},{"location":"","page":"BcdiStrain","title":"BcdiStrain","text":"Bragg Coherent Diffraction Imaging (BCDI) Strain implements projection-based phase retrieval algorithms.","category":"page"},{"location":"","page":"BcdiStrain","title":"BcdiStrain","text":"While this package is marked as BCDI specific, the methods are more general and can be used in many phase retrieval problems. In the future, this package may be incorporated into a more general phase retrieval package.","category":"page"},{"location":"","page":"BcdiStrain","title":"BcdiStrain","text":"Currently, this entire package must be run with access to GPUs. This may change in the future (especially if Issues requesting it are opened), but for our research group, using GPUs is a necessity.","category":"page"},{"location":"#Installation","page":"BcdiStrain","title":"Installation","text":"","category":"section"},{"location":"","page":"BcdiStrain","title":"BcdiStrain","text":"Currently, BcdiStrain.jl is not registered in the Julia general registry and can be installed by running in the REPL package manager (]):","category":"page"},{"location":"","page":"BcdiStrain","title":"BcdiStrain","text":"add BcdiStrain","category":"page"},{"location":"use/#Overview","page":"Usage","title":"Overview","text":"","category":"section"},{"location":"use/","page":"Usage","title":"Usage","text":"BcdiStrain implements projection-based algorithms in operator-style format. This means that the multiplication (*) and power (^) operators are used to apply operators to some current state. This may look like the following:","category":"page"},{"location":"use/","page":"Usage","title":"Usage","text":"er = BcdiTrad.ER()\nhio = BcdiTrad.HIO(0.9)\nstate = BcdiTrad.State(intensities, trues(size(intensities)))\n\n(er * hio^20)^5 * state","category":"page"},{"location":"use/","page":"Usage","title":"Usage","text":"This short script applies 20 HIO iterations and one ER iterations for a total of 5 times. This makes it easy to implement very complex recipes for phase retrieval algorithms.","category":"page"},{"location":"use/#API","page":"Usage","title":"API","text":"","category":"section"},{"location":"use/","page":"Usage","title":"Usage","text":"BcdiStrain.State\nBcdiStrain.ER\nBcdiStrain.HIO\nBcdiStrain.Shrink\nBcdiStrain.Center\nBcdiStrain.Mount","category":"page"},{"location":"use/#BcdiStrain.State","page":"Usage","title":"BcdiStrain.State","text":"State(intensities, recSupport)\n\nCreate a reconstruction object. The intensities and a mask over reciprocal space indicating trusted intensities need to be passed in.\n\n\n\n\n\n","category":"type"},{"location":"use/#BcdiStrain.ER","page":"Usage","title":"BcdiStrain.ER","text":"ER()\n\nCreate an object that applies an iteration of ER\n\n\n\n\n\n","category":"type"},{"location":"use/#BcdiStrain.HIO","page":"Usage","title":"BcdiStrain.HIO","text":"HIO(beta)\n\nCreate an object that applies an iteration of HIO\n\n\n\n\n\n","category":"type"},{"location":"use/#BcdiStrain.Shrink","page":"Usage","title":"BcdiStrain.Shrink","text":"Shrink(threshold, sigma, state)\n\nCreate an object that applies shrinkwrap\n\n\n\n\n\n","category":"type"},{"location":"use/#BcdiStrain.Center","page":"Usage","title":"BcdiStrain.Center","text":"Center(state)\n\nCreate an object that centers the current state\n\n\n\n\n\n","category":"type"},{"location":"use/#BcdiStrain.Mount","page":"Usage","title":"BcdiStrain.Mount","text":"Mount(beta, state, primitiveRecipLattice)\n\nCreate an object that switches between peaks.\n\n\n\n\n\n","category":"type"}]
}
