var documenterSearchIndex = {"docs":
[{"location":"#BcdiStrain.jl-Documentation","page":"BcdiStrain","title":"BcdiStrain.jl Documentation","text":"","category":"section"},{"location":"#About","page":"BcdiStrain","title":"About","text":"","category":"section"},{"location":"","page":"BcdiStrain","title":"BcdiStrain","text":"Bragg Coherent Diffraction Imaging (BCDI) Strain implements projection-based phase retrieval algorithms.","category":"page"},{"location":"","page":"BcdiStrain","title":"BcdiStrain","text":"While this package is marked as BCDI specific, the methods are more general and can be used in many phase retrieval problems. In the future, this package may be incorporated into a more general phase retrieval package.","category":"page"},{"location":"","page":"BcdiStrain","title":"BcdiStrain","text":"Currently, this entire package must be run with access to GPUs. This may change in the future (especially if Issues requesting it are opened), but for our research group, using GPUs is a necessity.","category":"page"},{"location":"#Installation","page":"BcdiStrain","title":"Installation","text":"","category":"section"},{"location":"","page":"BcdiStrain","title":"BcdiStrain","text":"Currently, BcdiStrain.jl is not registered in the Julia general registry and can be installed by running in the REPL package manager (]):","category":"page"},{"location":"","page":"BcdiStrain","title":"BcdiStrain","text":"add BcdiStrain","category":"page"},{"location":"refs/#References","page":"References","title":"References","text":"","category":"section"},{"location":"refs/","page":"References","title":"References","text":"J. R. Fienup. Reconstruction of an object from the modulus of its Fourier transform. Opt. Lett. 3, 27–29 (1978).\n\n\n\nS. Marchesini. Invited Article: A unified evaluation of iterative projection algorithms for phase retrieval. Rev. Sci. Instrum. 78, 11301 (2007).\n\n\n\nS. Marchesini and others. X-ray image reconstruction from a diffraction pattern alone. Phys. Rev. B 68, 140101 (2003).\n\n\n\n","category":"page"},{"location":"use/#Overview","page":"Usage","title":"Overview","text":"","category":"section"},{"location":"use/","page":"Usage","title":"Usage","text":"BcdiStrain implements projection-based algorithms in operator-style format. This means that the multiplication (*) and power (^) operators are used to apply operators to some current state. This may look like the following:","category":"page"},{"location":"use/","page":"Usage","title":"Usage","text":"er = BcdiTrad.ER()\nhio = BcdiTrad.HIO(0.9)\nstate = BcdiTrad.State(intensities, trues(size(intensities)))\n\n(er * hio^20)^5 * state","category":"page"},{"location":"use/","page":"Usage","title":"Usage","text":"This short script applies 20 HIO iterations and one ER iterations for a total of 5 times. This makes it easy to implement very complex recipes for phase retrieval algorithms.","category":"page"},{"location":"use/#API","page":"Usage","title":"API","text":"","category":"section"},{"location":"use/","page":"Usage","title":"Usage","text":"BcdiStrain.State\nBcdiStrain.ER\nBcdiStrain.HIO\nBcdiStrain.Shrink\nBcdiStrain.Center\nBcdiStrain.Mount","category":"page"},{"location":"use/#BcdiStrain.State","page":"Usage","title":"BcdiStrain.State","text":"State(intensities, recSupport)\nState(intensities, recSupport, support)\n\nCreate a reconstruction object. intensities is a vector of fully measured diffraction peaks and recSupport is a vector of masks over the intensities that removes those  intenities from the reconstruction process.\n\nThe initialization process shifts each peak to be centered in the Fourier sense (i.e. the center of mass of the peak is moved to the edge of the image, or the zero frequency). If the support is not passed in, an initial guess of the support is created by taking an IFFT of the intensities and including everything above 0.1 times the maximum value.\n\n\n\n\n\n","category":"type"},{"location":"use/#BcdiStrain.ER","page":"Usage","title":"BcdiStrain.ER","text":"ER()\n\nCreate an object that applies one iteration of Error Reduction (ER) to the currently Mounted peak. ER is an iterative projection  algorithm that enforces two constraints, (1) the modulus constraint  and (2) the support constraint:\n\nWhen moved to reciprocal space, the reconstructed object must match the diffraction pattern.\nThe reconstructed object must fully lie within the support.\n\nOne iteration of ER first applies the modulus constraint, then the support constraint to the object, then returnns.\n\nGradient descent is an alternate way to view the ER algorithm becausee ER is equivalent to gradient descent with a step size of 0.5.\n\nMore information about the ER algorithm can be found in [1, 2].\n\n\n\n\n\n","category":"type"},{"location":"use/#BcdiStrain.HIO","page":"Usage","title":"BcdiStrain.HIO","text":"HIO(beta)\n\nCreate an object that applies an iteration of hybrid input-output (HIO) to the currently Mounted peak. On the interior of the support,  HIO is equivalent to applying the modulus constraint as described in the  ER algorithm, and on the exterior of the support, HIO is equal  to the current reconstruction minus a fraction of the output after applying  the modulus constraint, that is,\n\nrho_i+1 = begincases\nER(rho_i)  rho in support \nrho_i - beta * ER(rho_i)  rho notin support\nendcases\n\nMarchesini [2] has shown that the HIO algorithm is equivalent to a mini-max problem.\n\nMore information about the HIO algorithm can be found in [1, 2].\n\n\n\n\n\n","category":"type"},{"location":"use/#BcdiStrain.Shrink","page":"Usage","title":"BcdiStrain.Shrink","text":"Shrink(threshold, sigma, state::State)\n\nCreate an object that applies one iteration of the shrinkwrap algorithm to the current real space object. Shrinkwrap first applies a Gaussian  blur to the current reconstruction using sigma as the width of the Gaussian.  The support is then created from everything above the threshold times  maximum value of the blurred object.\n\nFurther information about the shrinkwrap algorithm can be found in [3].\n\n\n\n\n\n","category":"type"},{"location":"use/#BcdiStrain.Center","page":"Usage","title":"BcdiStrain.Center","text":"Center(state)\n\nCreate an object that centers the current real space object. The center of mass of the support is calculated and the object is moved so the center of mass is centered in the Fourier transform sense. In other words, the center of mass is moved to the zeroth frequency, or the bottom left corner of the image.\n\n\n\n\n\n","category":"type"},{"location":"use/#BcdiStrain.Mount","page":"Usage","title":"BcdiStrain.Mount","text":"Mount(beta, state, primitiveRecipLattice)\n\nCreate an object that mounts a new peak. The current real space object is projected back to update the magnitude of the electron density and the displacement field. A new peak is selected at random and the current solution is projected out to this peak.\n\nThe paper that describes this algorithm is currently in submission.\n\n\n\n\n\n","category":"type"}]
}
